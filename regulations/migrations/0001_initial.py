# Generated by Django 4.1.1 on 2022-09-26 07:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("identifier", models.IntegerField()),
                ("name", models.CharField(max_length=256)),
                ("part", models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Paragraph",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("text", models.TextField()),
                ("order", models.IntegerField(unique=True)),
                ("note", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Regime",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=256)),
                ("number_range_min", models.IntegerField(unique=True)),
                ("number_range_max", models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("identifier", models.CharField(max_length=256, unique=True)),
                ("name", models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name="Regulation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("regime_number", models.IntegerField()),
                ("category", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="regulations.category")),
                ("regime", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="regulations.regime")),
                (
                    "sub_category",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="regulations.subcategory"),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="regime",
            constraint=models.CheckConstraint(
                check=models.Q(("number_range_min__lt", models.F("number_range_max"))),
                name="number_range_min_less_than_max",
            ),
        ),
        migrations.AddField(
            model_name="paragraph",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="paragraphs",
                to="regulations.category",
            ),
        ),
        migrations.AddField(
            model_name="paragraph",
            name="parent",
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to="regulations.paragraph"),
        ),
        migrations.AddField(
            model_name="paragraph",
            name="regulation",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="paragraphs",
                to="regulations.regulation",
            ),
        ),
        migrations.AddField(
            model_name="paragraph",
            name="sub_category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="paragraphs",
                to="regulations.subcategory",
            ),
        ),
        migrations.AddConstraint(
            model_name="regulation",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("regime_number__gte", models.F("regime__number_range_min")),
                    ("regime_number__lte", models.F("regime__number_range_max")),
                ),
                name="valid_regime_number",
            ),
        ),
        migrations.AddConstraint(
            model_name="paragraph",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("regulation__isnull", False), ("category__isnull", True), ("sub_category__isnull", True)),
                    models.Q(("regulation__isnull", True), ("category__isnull", False)),
                    _connector="OR",
                ),
                name="valid_parent",
            ),
        ),
    ]
